/**
 * @file    main.cpp
 *
 * @brief   Implementation of application entry point "main"
 *
 * @note    This example code is free software: you can redistribute it and/or modify it.
 *
 *          This program is provided by IMST GmbH on an "AS IS" basis without
 *          any warranties in the hope that it will be useful.
 */

#include <QCoreApplication>
#include <QSerialPortInfo>

#include "WiMOD_DemoApp.h"
#include "Utils/Console.h"

/**
 * @brief   find a serial port name by VendorID
 *
 * @return  first portName of avaialable ports
 *
 */
QString
FindPortByVendorID()
{
    enum VendorIDs
    {
        VID_FTDI    = 0x0403,   // Vendor ID for FTDI
        VID_SILABS  = 0x10C4,   // Vendor ID for Silicon Labs
        VID_STM32   = 0x0483    // Vendor ID for STM32
    };

    QList < uint16_t > supportedVendorIDs;

    supportedVendorIDs.append( VID_FTDI );
    supportedVendorIDs.append( VID_SILABS );
    supportedVendorIDs.append( VID_STM32 );

    QList < QSerialPortInfo > portInfos = QSerialPortInfo::availablePorts();

    for ( QSerialPortInfo portInfo : portInfos )
    {
        if ( supportedVendorIDs.contains( portInfo.vendorIdentifier() ) )
        {
            return portInfo.portName();
        }
    }

    return QString();
}

/**
 * @brief   entry point of this application
 *
 * @param   argc    number of command line arguments
 *
 * @param   argv    array with command line arguments
 *
 * @return  exit code
 */
int
main( int argc, char* argv[] )
{
    Console         console;
    WiMOD_DemoApp   demoApp( console );

    QString portName = FindPortByVendorID();

    // port name available on command line?
    if ( argc >= 2 )
    {
        // yes, take port name from command line
        portName = QString( argv[ 1 ] );
    }

    QCoreApplication app( argc, argv );

    demoApp.Enable( portName );

    return app.exec();
}
